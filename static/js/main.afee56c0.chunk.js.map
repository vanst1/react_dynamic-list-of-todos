{"version":3,"sources":["types/Filter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/ErrorModal/ErrorModal.tsx","components/TodoModal/TodoModal.tsx","App.tsx","utils/helper.tsx","index.tsx"],"names":["Filter","TodoList","todos","onTodoSelected","selectedTodoId","className","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","searchQuery","todosFilter","onSearchQueryChange","onTodosFilterChange","value","onChange","event","target","ALL","ACTIVE","COMPLETED","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","ErrorModal","clearSelectedTodo","TodoModal","useState","user","setUser","isLoadingError","setIsLoadingError","loadUser","useCallback","a","userId","userFromServer","useEffect","href","email","name","App","setTodos","isDataLoading","setIsDataLoading","setSelectedTodoId","setSearchQuery","setTodosFilter","visibleTodos","useMemo","status","preparedTodos","filter","preparedQuery","toLowerCase","includes","prepareTodo","selectedTodo","find","changeSearchQuery","query","changeTodosFilter","loadTodos","todosFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.afee56c0.chunk.js","sourcesContent":["export enum Filter {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[]\n  onTodoSelected: (todoId: number) => void,\n  selectedTodoId: number,\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onTodoSelected,\n  selectedTodoId,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          key={todo.id}\n          data-cy=\"todo\"\n          className=\"\"\n        >\n          <td className=\"is-vcentered\">\n            {todo.id}\n          </td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={classNames({\n              'has-text-danger': !todo.completed,\n              'has-text-success': todo.completed,\n            })}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => {\n                onTodoSelected(todo.id);\n              }}\n            >\n              <span className=\"icon\">\n                <i className={classNames(\n                  'far',\n                  {\n                    'fa-eye': selectedTodoId !== todo.id,\n                    'fa-eye-slash': selectedTodoId === todo.id,\n                  },\n                )}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport { Filter } from '../../types/Filter';\n\ninterface Props {\n  searchQuery: string;\n  todosFilter: string;\n  onSearchQueryChange: (searchQuery: string) => void;\n  onTodosFilterChange: (todosFilter: Filter) => void;\n}\nexport const TodoFilter: React.FC<Props> = ({\n  searchQuery,\n  todosFilter,\n  onSearchQueryChange,\n  onTodosFilterChange,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={todosFilter}\n          onChange={(event) => {\n            onTodosFilterChange(event.target.value as Filter);\n          }}\n        >\n          <option value={Filter.ALL}>All</option>\n          <option value={Filter.ACTIVE}>Active</option>\n          <option value={Filter.COMPLETED}>Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={searchQuery}\n        onChange={(event) => {\n          onSearchQueryChange(event.target.value);\n        }}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {searchQuery && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            aria-label=\"Clear search button\"\n            onClick={() => {\n              onSearchQueryChange('');\n            }}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todo: Todo | null;\n  clearSelectedTodo: () => void;\n}\n\nexport const ErrorModal: React.FC<Props> = ({ todo, clearSelectedTodo }) => (\n  <div\n    className={classNames(\n      'modal',\n      {\n        'is-active': todo,\n      },\n    )}\n    data-cy=\"modal\"\n  >\n    <div className=\"modal-background\" />\n    <div className=\"modal-card\">\n      <header className=\"modal-card-head\">\n        <div\n          className=\"modal-card-title has-text-weight-medium\"\n          data-cy=\"modal-header\"\n        >\n          Error\n        </div>\n\n        <button\n          type=\"button\"\n          aria-label=\"Close modal\"\n          className=\"delete\"\n          data-cy=\"modal-close\"\n          onClick={clearSelectedTodo}\n        />\n      </header>\n\n      <div className=\"modal-card-body\">\n        <p className=\"block\" data-cy=\"modal-title\">\n          Server is unavailable, try again later...\n        </p>\n      </div>\n    </div>\n  </div>\n);\n","import React, { useEffect, useState, useCallback } from 'react';\nimport classNames from 'classnames';\n\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { ErrorModal } from '../ErrorModal';\n\ninterface Props {\n  todo: Todo | null\n  clearSelectedTodo: () => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  clearSelectedTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoadingError, setIsLoadingError] = useState(false);\n\n  const loadUser = useCallback(async () => {\n    try {\n      if (todo) {\n        const userFromServer = await getUser(todo.userId);\n\n        setUser(userFromServer);\n      }\n    } catch (error) {\n      setIsLoadingError(true);\n    }\n  }, []);\n\n  useEffect(() => {\n    loadUser();\n  }, []);\n\n  if (isLoadingError) {\n    return (\n      <ErrorModal\n        todo={todo}\n        clearSelectedTodo={clearSelectedTodo}\n      />\n    );\n  }\n\n  return (\n    <div\n      className={classNames(\n        'modal',\n        {\n          'is-active': todo,\n        },\n      )}\n      data-cy=\"modal\"\n    >\n      <div className=\"modal-background\" />\n\n      {user && todo\n        ? (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${todo.id}`}\n              </div>\n\n              <button\n                type=\"button\"\n                aria-label=\"Close modal\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={clearSelectedTodo}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {todo.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {todo.completed\n                  && <strong className=\"has-text-success\">Done</strong>}\n\n                {!todo.completed\n                  && <strong className=\"has-text-danger\">Planned</strong>}\n\n                {' by '}\n\n                <a href={`mailto:${user.email}`}>\n                  {user.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )\n        : <Loader />}\n    </div>\n  );\n};\n","import React, {\n  useCallback, useEffect, useMemo, useState,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { prepareTodo } from './utils/helper';\nimport { Filter } from './types/Filter';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isDataLoading, setIsDataLoading] = useState(true);\n  const [isLoadingError, setIsLoadingError] = useState(false);\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [todosFilter, setTodosFilter] = useState<Filter>(Filter.ALL);\n\n  const visibleTodos = useMemo(() => (\n    prepareTodo(todos, searchQuery, todosFilter)\n  ), [todos, searchQuery, todosFilter]);\n\n  const selectedTodo\n    = visibleTodos.find(todo => todo.id === selectedTodoId) || null;\n\n  const clearSelectedTodo = useCallback(() => {\n    setSelectedTodoId(0);\n  }, []);\n\n  const changeSearchQuery = useCallback((query: string) => {\n    setSearchQuery(query);\n  }, []);\n\n  const changeTodosFilter = useCallback((filter: Filter) => {\n    setTodosFilter(filter);\n  }, []);\n\n  const loadTodos = useCallback(async () => {\n    try {\n      const todosFromServer = await getTodos();\n\n      setTodos(todosFromServer);\n      setIsDataLoading(false);\n    } catch (error) {\n      setIsLoadingError(true);\n    }\n  }, []);\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  if (isLoadingError) {\n    return (\n      <h1>Server is unavailable, try again later...</h1>\n    );\n  }\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                searchQuery={searchQuery}\n                todosFilter={todosFilter}\n                onSearchQueryChange={changeSearchQuery}\n                onTodosFilterChange={changeTodosFilter}\n              />\n            </div>\n            {isDataLoading\n              ? <Loader />\n              : (\n                <div className=\"block\">\n                  <TodoList\n                    todos={visibleTodos}\n                    onTodoSelected={setSelectedTodoId}\n                    selectedTodoId={selectedTodoId}\n                  />\n                </div>\n              )}\n          </div>\n        </div>\n      </div>\n      {selectedTodoId\n        && (\n          <TodoModal\n            todo={selectedTodo}\n            clearSelectedTodo={clearSelectedTodo}\n          />\n        )}\n    </>\n  );\n};\n","import { Filter } from '../types/Filter';\nimport { Todo } from '../types/Todo';\n\nexport const prepareTodo = (\n  todos: Todo[],\n  searchQuery: string,\n  status: string,\n) => {\n  let preparedTodos = todos.filter(todo => {\n    switch (status) {\n      case Filter.ACTIVE:\n        return !todo.completed;\n      case Filter.COMPLETED:\n        return todo.completed;\n      default:\n        return true;\n    }\n  });\n\n  if (searchQuery) {\n    preparedTodos = preparedTodos.filter(todo => {\n      const preparedQuery = searchQuery.toLowerCase();\n      const preparedTitle = todo.title.toLowerCase();\n\n      return preparedTitle.includes(preparedQuery);\n    });\n  }\n\n  return preparedTodos;\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}